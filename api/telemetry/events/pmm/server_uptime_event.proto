syntax = "proto3";

package percona.platform.telemetry.events.pmm.v1;

option go_package = "/telemetry/events/pmm;pmmv1";

import "validator/validator.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

// DistributionMethod represents PMM Server distribution method.
enum DistributionMethod {
  // DISTRIBUTION_METHOD_INVALID represents unknown distribution method.
  DISTRIBUTION_METHOD_INVALID = 0;
  // DOCKER represents Docker distribution method.
  DOCKER = 1;
  // OVF represents Open Virtualization Format / Open Virtual Appliance distribution method.
  OVF = 2;
  // AMI represents Amazon Machine Image distribution method.
  AMI = 3;
  // AZURE represents Azure distribution method.
  AZURE = 4;
  // DO represents Digital Ocean distribution method.
  DO = 5;
}

// ServerUptimeEvent contains basic information about PMM Server version,
// uptime, and distribution method.
message ServerUptimeEvent {
  // PMM Server unique identifier.
  bytes id = 1 [
    (validator.field) = {
      length_eq: 16
    }
  ];
  // PMM Server version.
  string version = 2 [
    (validator.field) = {
      length_gt: 4
    }
  ];
  // PMM Server uptime.
  google.protobuf.Duration up_duration = 3 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // PMM Server distribution method.
  DistributionMethod distribution_method = 4 [
    (validator.field) = {
      is_in_enum: true
    }
  ];
  // PMM Server STT enabled.
  google.protobuf.BoolValue stt_enabled = 5;
  // PMM Server IA enabled.
  google.protobuf.BoolValue ia_enabled = 6;
}

// ServerMetrics contains PMM Server metrics.
// There are mandatory metrics and optional metric pairs.
// The exact metrics pairs (metric name, metric value) is defined by PMM Server.
message ServerMetric {
  // Event UUID.
  bytes id = 1 [
    (validator.field) = {
      length_eq: 16
    }
  ];
  // Time when this event was received by the sender.
  google.protobuf.Timestamp time = 2 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // PMM Server unique Telemetry identifier.
  // Mandatory.
  bytes pmm_server_telemetry_id = 3 [
    (validator.field) = {
      length_eq: 16
    }
  ];
  // PMM Server version.
  // Mandatory.
  string pmm_server_version = 4 [
    (validator.field) = {
      length_gt: 4
    }
  ];
  // PMM Server uptime.
  // Mandatory.
  google.protobuf.Duration up_duration = 5 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // PMM Server distribution method.
  // Mandatory.
  DistributionMethod distribution_method = 6 [
    (validator.field) = {
      is_in_enum: true
    }
  ];

  message Metric {
    string key = 1;
    string value = 2;
  }
  // PMM server metrics collection.
  // Optional.
  repeated Metric metrics = 7;
}