syntax = "proto3";

package percona.platform.telemetry.reporter.v1;

option go_package = "/telemetry/reporter;reporterv1";

import "validator/validator.proto";
import "telemetry/reporter/event.proto";
import "telemetry/events/pmm/server_uptime_event.proto";
import "google/protobuf/duration.proto";
import "google/api/annotations.proto";

// ReporterAPI describes server API for reporting telemetry events.
service ReporterAPI {
  // Report submits several telemetry events to the server.
  rpc Report(ReportRequest) returns (ReportResponse) {
    option (google.api.http) = {
      post: "/v1/telemetry/Report"
      body: "*"
    };
  }
}

message ReportRequest {
  // One or more events to report.
  repeated Event events = 1;

  // One or more metrics events to report.
  // Only 'events' or 'metrics' field must be set.
  repeated events.pmm.v1.ServerMetric metrics = 2;
}

message ReportResponse {}
