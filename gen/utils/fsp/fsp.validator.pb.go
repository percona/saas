// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: utils/fsp/fsp.proto

package fsp

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/structpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *FilteringSortingPagination) Validate() error {
	for _, item := range this.Filters {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Filters", err)
			}
		}
	}
	if this.SortingParams != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SortingParams); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SortingParams", err)
		}
	}
	if this.PageParams != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.PageParams); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("PageParams", err)
		}
	}
	return nil
}
func (this *Filter) Validate() error {
	if this.Field != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Field); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Field", err)
		}
	}
	return nil
}
func (this *Field) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.Value != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Value); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Value", err)
		}
	}
	return nil
}
func (this *SortingParams) Validate() error {
	return nil
}
func (this *PageParams) Validate() error {
	return nil
}
func (this *PageTotals) Validate() error {
	return nil
}
