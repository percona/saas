// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: utils/fsp/fsp.proto

package fsp

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FilterType represents type of filter that will be applied to SQL query.
type FilterType int32

const (
	// In case single value is provided, EQUAL will trigger "=" SQL behaviour.
	// If array of values provided, EQUAL will trigger "IN" SQL behaviour.
	FilterType_EQUAL FilterType = 0
	// In case single value is provided, NOT EQUAL will trigger "<>" SQL behaviour.
	// If array of values provided, EQUAL will trigger "NOT IN" SQL behaviour.
	FilterType_NOT_EQUAL FilterType = 1
	// GREATER is mapped to SQL '>'.
	FilterType_GREATER FilterType = 2
	// GREATER_OR_EQUAL is mapped to SQL '>='.
	FilterType_GREATER_OR_EQUAL FilterType = 3
	// LESS is mapped to SQL '<'.
	FilterType_LESS FilterType = 4
	// LESS_OR_EQUAL is mapped to SQL '<='.
	FilterType_LESS_OR_EQUAL FilterType = 5
)

// Enum value maps for FilterType.
var (
	FilterType_name = map[int32]string{
		0: "EQUAL",
		1: "NOT_EQUAL",
		2: "GREATER",
		3: "GREATER_OR_EQUAL",
		4: "LESS",
		5: "LESS_OR_EQUAL",
	}
	FilterType_value = map[string]int32{
		"EQUAL":            0,
		"NOT_EQUAL":        1,
		"GREATER":          2,
		"GREATER_OR_EQUAL": 3,
		"LESS":             4,
		"LESS_OR_EQUAL":    5,
	}
)

func (x FilterType) Enum() *FilterType {
	p := new(FilterType)
	*p = x
	return p
}

func (x FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_utils_fsp_fsp_proto_enumTypes[0].Descriptor()
}

func (FilterType) Type() protoreflect.EnumType {
	return &file_utils_fsp_fsp_proto_enumTypes[0]
}

func (x FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterType.Descriptor instead.
func (FilterType) EnumDescriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{0}
}

type SortingOrder int32

const (
	// ASC is for ascending sorting order.
	SortingOrder_ASC SortingOrder = 0
	// DESC is for descending sorting order.
	SortingOrder_DESC SortingOrder = 1
)

// Enum value maps for SortingOrder.
var (
	SortingOrder_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SortingOrder_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SortingOrder) Enum() *SortingOrder {
	p := new(SortingOrder)
	*p = x
	return p
}

func (x SortingOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortingOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_utils_fsp_fsp_proto_enumTypes[1].Descriptor()
}

func (SortingOrder) Type() protoreflect.EnumType {
	return &file_utils_fsp_fsp_proto_enumTypes[1]
}

func (x SortingOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortingOrder.Descriptor instead.
func (SortingOrder) EnumDescriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{1}
}

// FilteringSortingPagination aggregates params for filtering, sorting and pagination.
type FilteringSortingPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// filters are optional. No filters will be applied if absent. If multiple provided - will be joined using AND logic.
	Filters []*Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	// sorting_params are optional. No sorting will be applied if absent.
	SortingParams *SortingParams `protobuf:"bytes,2,opt,name=sorting_params,json=sortingParams,proto3" json:"sorting_params,omitempty"`
	// page_params are optional. No pagination will be applied if absent.
	PageParams *PageParams `protobuf:"bytes,3,opt,name=page_params,json=pageParams,proto3" json:"page_params,omitempty"`
}

func (x *FilteringSortingPagination) Reset() {
	*x = FilteringSortingPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utils_fsp_fsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilteringSortingPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilteringSortingPagination) ProtoMessage() {}

func (x *FilteringSortingPagination) ProtoReflect() protoreflect.Message {
	mi := &file_utils_fsp_fsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilteringSortingPagination.ProtoReflect.Descriptor instead.
func (*FilteringSortingPagination) Descriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{0}
}

func (x *FilteringSortingPagination) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *FilteringSortingPagination) GetSortingParams() *SortingParams {
	if x != nil {
		return x.SortingParams
	}
	return nil
}

func (x *FilteringSortingPagination) GetPageParams() *PageParams {
	if x != nil {
		return x.PageParams
	}
	return nil
}

// Filter is used to filter results for endpoints that return list of values.
type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// filter_type defines logic of the filter.
	FilterType FilterType `protobuf:"varint,1,opt,name=filter_type,json=filterType,proto3,enum=utils.fsp.FilterType" json:"filter_type,omitempty"`
	// field defines based on which data filtering must occur.
	Field *Field `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utils_fsp_fsp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_utils_fsp_fsp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetFilterType() FilterType {
	if x != nil {
		return x.FilterType
	}
	return FilterType_EQUAL
}

func (x *Filter) GetField() *Field {
	if x != nil {
		return x.Field
	}
	return nil
}

// Field of an object.
type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the field (name of the column when applicable to SQL).
	// If a filter exists then the name field must not be empty since that
	// can result in an invalid SQL query and lead to non-descriptive errors.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value of the field.
	Value *structpb.Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utils_fsp_fsp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_utils_fsp_fsp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{2}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// SortingParams are used to sort results for endpoints that return list of values.
type SortingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string       `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Order     SortingOrder `protobuf:"varint,2,opt,name=order,proto3,enum=utils.fsp.SortingOrder" json:"order,omitempty"`
}

func (x *SortingParams) Reset() {
	*x = SortingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utils_fsp_fsp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingParams) ProtoMessage() {}

func (x *SortingParams) ProtoReflect() protoreflect.Message {
	mi := &file_utils_fsp_fsp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingParams.ProtoReflect.Descriptor instead.
func (*SortingParams) Descriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{3}
}

func (x *SortingParams) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *SortingParams) GetOrder() SortingOrder {
	if x != nil {
		return x.Order
	}
	return SortingOrder_ASC
}

// PageParams represents page request parameters for pagination.
type PageParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum number of results per page.
	PageSize uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Index of the requested page, starts from 0.
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *PageParams) Reset() {
	*x = PageParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utils_fsp_fsp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageParams) ProtoMessage() {}

func (x *PageParams) ProtoReflect() protoreflect.Message {
	mi := &file_utils_fsp_fsp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageParams.ProtoReflect.Descriptor instead.
func (*PageParams) Descriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{4}
}

func (x *PageParams) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageParams) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// PageTotals represents total values for pagination and are included in paginated responses.
type PageTotals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of results.
	TotalItems uint32 `protobuf:"varint,1,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	// Total number of pages.
	TotalPages uint32 `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
}

func (x *PageTotals) Reset() {
	*x = PageTotals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utils_fsp_fsp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageTotals) ProtoMessage() {}

func (x *PageTotals) ProtoReflect() protoreflect.Message {
	mi := &file_utils_fsp_fsp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageTotals.ProtoReflect.Descriptor instead.
func (*PageTotals) Descriptor() ([]byte, []int) {
	return file_utils_fsp_fsp_proto_rawDescGZIP(), []int{5}
}

func (x *PageTotals) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *PageTotals) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

var File_utils_fsp_fsp_proto protoreflect.FileDescriptor

var file_utils_fsp_fsp_proto_rawDesc = []byte{
	0x0a, 0x13, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x66, 0x73, 0x70, 0x2f, 0x66, 0x73, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x66, 0x73, 0x70,
	0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69,
	0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x66,
	0x73, 0x70, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x73, 0x2e, 0x66, 0x73, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2e, 0x66, 0x73, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x68, 0x0a, 0x06, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x73, 0x2e, 0x66, 0x73, 0x70, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x73, 0x2e, 0x66, 0x73, 0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x51, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e,
	0x66, 0x73, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x2a, 0x66, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41,
	0x4c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x05,
	0x2a, 0x21, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53,
	0x43, 0x10, 0x01, 0x42, 0xbf, 0x01, 0x92, 0x41, 0x33, 0x12, 0x31, 0x0a, 0x09, 0x55, 0x74, 0x69,
	0x6c, 0x73, 0x20, 0x41, 0x50, 0x49, 0x12, 0x24, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x20, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x20, 0x61, 0x63, 0x72, 0x6f,
	0x73, 0x73, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x66, 0x73, 0x70, 0x42, 0x08, 0x46, 0x73, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x66,
	0x73, 0x70, 0xa2, 0x02, 0x03, 0x55, 0x46, 0x58, 0xaa, 0x02, 0x09, 0x55, 0x74, 0x69, 0x6c, 0x73,
	0x2e, 0x46, 0x73, 0x70, 0xca, 0x02, 0x09, 0x55, 0x74, 0x69, 0x6c, 0x73, 0x5c, 0x46, 0x73, 0x70,
	0xe2, 0x02, 0x15, 0x55, 0x74, 0x69, 0x6c, 0x73, 0x5c, 0x46, 0x73, 0x70, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x55, 0x74, 0x69, 0x6c, 0x73,
	0x3a, 0x3a, 0x46, 0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_utils_fsp_fsp_proto_rawDescOnce sync.Once
	file_utils_fsp_fsp_proto_rawDescData = file_utils_fsp_fsp_proto_rawDesc
)

func file_utils_fsp_fsp_proto_rawDescGZIP() []byte {
	file_utils_fsp_fsp_proto_rawDescOnce.Do(func() {
		file_utils_fsp_fsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_utils_fsp_fsp_proto_rawDescData)
	})
	return file_utils_fsp_fsp_proto_rawDescData
}

var file_utils_fsp_fsp_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_utils_fsp_fsp_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_utils_fsp_fsp_proto_goTypes = []any{
	(FilterType)(0),                    // 0: utils.fsp.FilterType
	(SortingOrder)(0),                  // 1: utils.fsp.SortingOrder
	(*FilteringSortingPagination)(nil), // 2: utils.fsp.FilteringSortingPagination
	(*Filter)(nil),                     // 3: utils.fsp.Filter
	(*Field)(nil),                      // 4: utils.fsp.Field
	(*SortingParams)(nil),              // 5: utils.fsp.SortingParams
	(*PageParams)(nil),                 // 6: utils.fsp.PageParams
	(*PageTotals)(nil),                 // 7: utils.fsp.PageTotals
	(*structpb.Value)(nil),             // 8: google.protobuf.Value
}
var file_utils_fsp_fsp_proto_depIdxs = []int32{
	3, // 0: utils.fsp.FilteringSortingPagination.filters:type_name -> utils.fsp.Filter
	5, // 1: utils.fsp.FilteringSortingPagination.sorting_params:type_name -> utils.fsp.SortingParams
	6, // 2: utils.fsp.FilteringSortingPagination.page_params:type_name -> utils.fsp.PageParams
	0, // 3: utils.fsp.Filter.filter_type:type_name -> utils.fsp.FilterType
	4, // 4: utils.fsp.Filter.field:type_name -> utils.fsp.Field
	8, // 5: utils.fsp.Field.value:type_name -> google.protobuf.Value
	1, // 6: utils.fsp.SortingParams.order:type_name -> utils.fsp.SortingOrder
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_utils_fsp_fsp_proto_init() }
func file_utils_fsp_fsp_proto_init() {
	if File_utils_fsp_fsp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_utils_fsp_fsp_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FilteringSortingPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utils_fsp_fsp_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utils_fsp_fsp_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utils_fsp_fsp_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SortingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utils_fsp_fsp_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PageParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utils_fsp_fsp_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PageTotals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utils_fsp_fsp_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_utils_fsp_fsp_proto_goTypes,
		DependencyIndexes: file_utils_fsp_fsp_proto_depIdxs,
		EnumInfos:         file_utils_fsp_fsp_proto_enumTypes,
		MessageInfos:      file_utils_fsp_fsp_proto_msgTypes,
	}.Build()
	File_utils_fsp_fsp_proto = out.File
	file_utils_fsp_fsp_proto_rawDesc = nil
	file_utils_fsp_fsp_proto_goTypes = nil
	file_utils_fsp_fsp_proto_depIdxs = nil
}
