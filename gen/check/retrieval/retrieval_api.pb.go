// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: check/retrieval/retrieval_api.proto

package retrievalv1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllChecksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllChecksRequest) Reset() {
	*x = GetAllChecksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChecksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChecksRequest) ProtoMessage() {}

func (x *GetAllChecksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChecksRequest.ProtoReflect.Descriptor instead.
func (*GetAllChecksRequest) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{0}
}

type GetAllChecksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of advisor checks in YAML format.
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// File signatures.
	Signatures []string `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *GetAllChecksResponse) Reset() {
	*x = GetAllChecksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChecksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChecksResponse) ProtoMessage() {}

func (x *GetAllChecksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChecksResponse.ProtoReflect.Descriptor instead.
func (*GetAllChecksResponse) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllChecksResponse) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *GetAllChecksResponse) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type GetAllAdvisorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAdvisorsRequest) Reset() {
	*x = GetAllAdvisorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdvisorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdvisorsRequest) ProtoMessage() {}

func (x *GetAllAdvisorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdvisorsRequest.ProtoReflect.Descriptor instead.
func (*GetAllAdvisorsRequest) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{2}
}

type GetAllAdvisorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of advisors in YAML format.
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// File signatures.
	Signatures []string `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *GetAllAdvisorsResponse) Reset() {
	*x = GetAllAdvisorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdvisorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdvisorsResponse) ProtoMessage() {}

func (x *GetAllAdvisorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdvisorsResponse.ProtoReflect.Descriptor instead.
func (*GetAllAdvisorsResponse) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllAdvisorsResponse) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *GetAllAdvisorsResponse) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type GetAllAlertRuleTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAlertRuleTemplatesRequest) Reset() {
	*x = GetAllAlertRuleTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAlertRuleTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAlertRuleTemplatesRequest) ProtoMessage() {}

func (x *GetAllAlertRuleTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAlertRuleTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetAllAlertRuleTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{4}
}

type GetAllAlertRuleTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of alert rule templates in YAML format.
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// File signatures.
	Signatures []string `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *GetAllAlertRuleTemplatesResponse) Reset() {
	*x = GetAllAlertRuleTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAlertRuleTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAlertRuleTemplatesResponse) ProtoMessage() {}

func (x *GetAllAlertRuleTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAlertRuleTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetAllAlertRuleTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllAlertRuleTemplatesResponse) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *GetAllAlertRuleTemplatesResponse) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type GetAdvisorsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitByTier bool `protobuf:"varint,1,opt,name=limit_by_tier,json=limitByTier,proto3" json:"limit_by_tier,omitempty"`
}

func (x *GetAdvisorsInfoRequest) Reset() {
	*x = GetAdvisorsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvisorsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvisorsInfoRequest) ProtoMessage() {}

func (x *GetAdvisorsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvisorsInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAdvisorsInfoRequest) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetAdvisorsInfoRequest) GetLimitByTier() bool {
	if x != nil {
		return x.LimitByTier
	}
	return false
}

type GetAdvisorsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of advisors mapped to their respective tiers.
	Advisors map[string]*Advisors `protobuf:"bytes,1,rep,name=advisors,proto3" json:"advisors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAdvisorsInfoResponse) Reset() {
	*x = GetAdvisorsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvisorsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvisorsInfoResponse) ProtoMessage() {}

func (x *GetAdvisorsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvisorsInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAdvisorsInfoResponse) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetAdvisorsInfoResponse) GetAdvisors() map[string]*Advisors {
	if x != nil {
		return x.Advisors
	}
	return nil
}

type Advisors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Advisors []*AdvisorInfo `protobuf:"bytes,1,rep,name=advisors,proto3" json:"advisors,omitempty"`
}

func (x *Advisors) Reset() {
	*x = Advisors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Advisors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Advisors) ProtoMessage() {}

func (x *Advisors) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Advisors.ProtoReflect.Descriptor instead.
func (*Advisors) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{8}
}

func (x *Advisors) GetAdvisors() []*AdvisorInfo {
	if x != nil {
		return x.Advisors
	}
	return nil
}

type AdvisorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Summary     string       `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category    string       `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Checks      []*CheckInfo `protobuf:"bytes,5,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *AdvisorInfo) Reset() {
	*x = AdvisorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisorInfo) ProtoMessage() {}

func (x *AdvisorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisorInfo.ProtoReflect.Descriptor instead.
func (*AdvisorInfo) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{9}
}

func (x *AdvisorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdvisorInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AdvisorInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdvisorInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AdvisorInfo) GetChecks() []*CheckInfo {
	if x != nil {
		return x.Checks
	}
	return nil
}

type CheckInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Summary     string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CheckInfo) Reset() {
	*x = CheckInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check_retrieval_retrieval_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInfo) ProtoMessage() {}

func (x *CheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_check_retrieval_retrieval_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInfo.ProtoReflect.Descriptor instead.
func (*CheckInfo) Descriptor() ([]byte, []int) {
	return file_check_retrieval_retrieval_api_proto_rawDescGZIP(), []int{10}
}

func (x *CheckInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CheckInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_check_retrieval_retrieval_api_proto protoreflect.FileDescriptor

var file_check_retrieval_retrieval_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61,
	0x6c, 0x2f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x3c, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x62, 0x79, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x54, 0x69, 0x65, 0x72, 0x22, 0xed, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x70, 0x65, 0x72, 0x63,
	0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x1a,
	0x6a, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x08, 0x41,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x65, 0x72, 0x63,
	0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x64, 0x76,
	0x69, 0x73, 0x6f, 0x72, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x46, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x22, 0x5b, 0x0a, 0x09, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xe4, 0x0a, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x41, 0x50, 0x49, 0x12, 0xa8, 0x02, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x38, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f,
	0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01,
	0x92, 0x41, 0x7e, 0x12, 0x0e, 0x47, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x1a, 0x48, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61,
	0x6c, 0x6c, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x12, 0xad, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x76,
	0x69, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x3a, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1,
	0x01, 0x92, 0x41, 0x7b, 0x12, 0x10, 0x47, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x1a, 0x43, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x20, 0x61,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74,
	0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x32, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x2f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x73, 0x12, 0xee, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x44, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc4, 0x01, 0x92,
	0x41, 0x93, 0x01, 0x12, 0x1c, 0x47, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x1a, 0x4f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x6c,
	0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69, 0x65,
	0x72, 0x2e, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22,
	0x22, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x87, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e,
	0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xf8, 0x01, 0x92, 0x41, 0xda, 0x01, 0x12, 0x15, 0x47, 0x65, 0x74, 0x20, 0x61,
	0x6c, 0x6c, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x20, 0x69, 0x6e, 0x66, 0x6f,
	0x1a, 0x9c, 0x01, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x66,
	0x6f, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73,
	0x2e, 0x20, 0x49, 0x66, 0x20, 0x60, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x74,
	0x69, 0x65, 0x72, 0x60, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x77, 0x69, 0x6c,
	0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x20, 0x6f,
	0x6e, 0x6c, 0x79, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x73, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x32,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x2f, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x42, 0xb0, 0x03,
	0x92, 0x41, 0x7a, 0x12, 0x2f, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x20, 0x41, 0x50, 0x49, 0x12, 0x18, 0x41, 0x50, 0x49, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x20, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x7a, 0x47, 0x0a, 0x08, 0x78, 0x2d, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x12, 0x3b, 0x2a, 0x39, 0x0a, 0x37, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2d,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x32, 0x20, 0x0a, 0x06, 0x1a,
	0x04, 0x63, 0x75, 0x72, 0x6c, 0x0a, 0x04, 0x1a, 0x02, 0x67, 0x6f, 0x0a, 0x06, 0x1a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x0a, 0x08, 0x1a, 0x06, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x0a, 0x27, 0x63,
	0x6f, 0x6d, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x3b, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x76,
	0x31, 0xa2, 0x02, 0x04, 0x50, 0x50, 0x43, 0x52, 0xaa, 0x02, 0x23, 0x50, 0x65, 0x72, 0x63, 0x6f,
	0x6e, 0x61, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x23, 0x50, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61,
	0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2f, 0x50, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x5c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5c, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x27, 0x50, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61,
	0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x3a, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x3a, 0x3a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_check_retrieval_retrieval_api_proto_rawDescOnce sync.Once
	file_check_retrieval_retrieval_api_proto_rawDescData = file_check_retrieval_retrieval_api_proto_rawDesc
)

func file_check_retrieval_retrieval_api_proto_rawDescGZIP() []byte {
	file_check_retrieval_retrieval_api_proto_rawDescOnce.Do(func() {
		file_check_retrieval_retrieval_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_check_retrieval_retrieval_api_proto_rawDescData)
	})
	return file_check_retrieval_retrieval_api_proto_rawDescData
}

var file_check_retrieval_retrieval_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_check_retrieval_retrieval_api_proto_goTypes = []interface{}{
	(*GetAllChecksRequest)(nil),              // 0: percona.platform.check.retrieval.v1.GetAllChecksRequest
	(*GetAllChecksResponse)(nil),             // 1: percona.platform.check.retrieval.v1.GetAllChecksResponse
	(*GetAllAdvisorsRequest)(nil),            // 2: percona.platform.check.retrieval.v1.GetAllAdvisorsRequest
	(*GetAllAdvisorsResponse)(nil),           // 3: percona.platform.check.retrieval.v1.GetAllAdvisorsResponse
	(*GetAllAlertRuleTemplatesRequest)(nil),  // 4: percona.platform.check.retrieval.v1.GetAllAlertRuleTemplatesRequest
	(*GetAllAlertRuleTemplatesResponse)(nil), // 5: percona.platform.check.retrieval.v1.GetAllAlertRuleTemplatesResponse
	(*GetAdvisorsInfoRequest)(nil),           // 6: percona.platform.check.retrieval.v1.GetAdvisorsInfoRequest
	(*GetAdvisorsInfoResponse)(nil),          // 7: percona.platform.check.retrieval.v1.GetAdvisorsInfoResponse
	(*Advisors)(nil),                         // 8: percona.platform.check.retrieval.v1.Advisors
	(*AdvisorInfo)(nil),                      // 9: percona.platform.check.retrieval.v1.AdvisorInfo
	(*CheckInfo)(nil),                        // 10: percona.platform.check.retrieval.v1.CheckInfo
	nil,                                      // 11: percona.platform.check.retrieval.v1.GetAdvisorsInfoResponse.AdvisorsEntry
}
var file_check_retrieval_retrieval_api_proto_depIdxs = []int32{
	11, // 0: percona.platform.check.retrieval.v1.GetAdvisorsInfoResponse.advisors:type_name -> percona.platform.check.retrieval.v1.GetAdvisorsInfoResponse.AdvisorsEntry
	9,  // 1: percona.platform.check.retrieval.v1.Advisors.advisors:type_name -> percona.platform.check.retrieval.v1.AdvisorInfo
	10, // 2: percona.platform.check.retrieval.v1.AdvisorInfo.checks:type_name -> percona.platform.check.retrieval.v1.CheckInfo
	8,  // 3: percona.platform.check.retrieval.v1.GetAdvisorsInfoResponse.AdvisorsEntry.value:type_name -> percona.platform.check.retrieval.v1.Advisors
	0,  // 4: percona.platform.check.retrieval.v1.RetrievalAPI.GetAllChecks:input_type -> percona.platform.check.retrieval.v1.GetAllChecksRequest
	2,  // 5: percona.platform.check.retrieval.v1.RetrievalAPI.GetAllAdvisors:input_type -> percona.platform.check.retrieval.v1.GetAllAdvisorsRequest
	4,  // 6: percona.platform.check.retrieval.v1.RetrievalAPI.GetAllAlertRuleTemplates:input_type -> percona.platform.check.retrieval.v1.GetAllAlertRuleTemplatesRequest
	6,  // 7: percona.platform.check.retrieval.v1.RetrievalAPI.GetAdvisorsInfo:input_type -> percona.platform.check.retrieval.v1.GetAdvisorsInfoRequest
	1,  // 8: percona.platform.check.retrieval.v1.RetrievalAPI.GetAllChecks:output_type -> percona.platform.check.retrieval.v1.GetAllChecksResponse
	3,  // 9: percona.platform.check.retrieval.v1.RetrievalAPI.GetAllAdvisors:output_type -> percona.platform.check.retrieval.v1.GetAllAdvisorsResponse
	5,  // 10: percona.platform.check.retrieval.v1.RetrievalAPI.GetAllAlertRuleTemplates:output_type -> percona.platform.check.retrieval.v1.GetAllAlertRuleTemplatesResponse
	7,  // 11: percona.platform.check.retrieval.v1.RetrievalAPI.GetAdvisorsInfo:output_type -> percona.platform.check.retrieval.v1.GetAdvisorsInfoResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_check_retrieval_retrieval_api_proto_init() }
func file_check_retrieval_retrieval_api_proto_init() {
	if File_check_retrieval_retrieval_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_check_retrieval_retrieval_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChecksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChecksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAdvisorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAdvisorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAlertRuleTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAlertRuleTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvisorsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvisorsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Advisors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check_retrieval_retrieval_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_check_retrieval_retrieval_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_check_retrieval_retrieval_api_proto_goTypes,
		DependencyIndexes: file_check_retrieval_retrieval_api_proto_depIdxs,
		MessageInfos:      file_check_retrieval_retrieval_api_proto_msgTypes,
	}.Build()
	File_check_retrieval_retrieval_api_proto = out.File
	file_check_retrieval_retrieval_api_proto_rawDesc = nil
	file_check_retrieval_retrieval_api_proto_goTypes = nil
	file_check_retrieval_retrieval_api_proto_depIdxs = nil
}
